import json
import sys
from py_ecc import bn128
from py_ecc import fields

x = [[-5324055, -5718728, 10000000], [-6836828, -6951209, 10000000], [931978, 2011771, 10000000], [-3004245, -2895994, 10000000], [-5974205, -5341928, 10000000], [579499, 260909, 10000000], [-1775117, -1279850, 10000000], [1086527, 1007420, 10000000], [-4347143, -3583170, 10000000], [-8065697, -8590324, 10000000], [-6361489, -6952068, 10000000], [15595794, 16907294, 10000000], [-6300967, -5839047, 10000000], [645733, 1544801, 10000000], [-6543313, -7216244, 10000000], [-7222035, -7211748, 10000000], [-4660918, -5209846, 10000000], [-7869587, -8531513, 10000000], [-4494160, -3971761, 10000000], [-2828655, -2385567, 10000000], [-5118854, -4933399, 10000000], [31456014, 29711317, 10000000], [-6934493, -6422180, 10000000], [-4762999, -5435645, 10000000], [-6740202, -6364821, 10000000], [28014350, 28422536, 10000000], [12125561, 11255296, 10000000], [7265673, 8328454, 10000000], [13029483, 13774898, 10000000], [36476941, 37121591, 10000000], [-7551914, -7630816, 10000000], [-4079083, -3948071, 10000000], [2827100, 2461786, 10000000], [-5891085, -6288710, 10000000], [133250, -212297, 10000000], [-588068, -17135, 10000000], [-165979, -284383, 10000000], [-6632666, -7299603, 10000000], [12146342, 12379109, 10000000], [-4692087, -4140240, 10000000], [-7150604, -7474593, 10000000], [-3317760, -2841947, 10000000], [9216383, 9302388, 10000000], [-6197847, -6525837, 10000000], [-870415, -1629906, 10000000], [-2770731, -3250440, 10000000], [-8025175, -7646087, 10000000], [-6125897, -6082501, 10000000], [9195602, 9052315, 10000000], [-6800722, -7077713, 10000000], [-1609397, -2151416, 10000000], [-7408273, -7482200, 10000000], [-1911484, -2502921, 10000000], [-1446016, -2193520, 10000000], [-4745596, -4404517, 10000000], [-4677801, -4140117, 10000000], [-4897808, -5120653, 10000000], [-6545910, -6557631, 10000000], [2988142, 3311251, 10000000], [3360621, 2378730, 10000000], [1728885, 689212, 10000000], [-7741790, -8211964, 10000000], [34076869, 34717741, 10000000], [17528321, 16835982, 10000000], [28050715, 27640636, 10000000], [-2445786, -1575948, 10000000], [351440, -152473, 10000000], [5392890, 5046113, 10000000], [-6910336, -6524477, 10000000], [31640433, 30777209, 10000000], [5133141, 6106847, 10000000], [-2143700, -1974279, 10000000], [-5593934, -5324200, 10000000], [-2425785, -1849474, 10000000], [-8137647, -8090354, 10000000], [-4186877, -4643628, 10000000], [-1613554, -1060195, 10000000], [-8112710, -8112652, 10000000], [5491595, 6633181, 10000000], [-7927770, -7370347, 10000000], [-6313436, -6889616, 10000000], [-7718153, -7243150, 10000000], [-4686114, -4153395, 10000000], [4179087, 4160646, 10000000], [-4269997, -3827893, 10000000], [928341, 633376, 10000000], [2650469, 2171055, 10000000], [-5604843, -5243242, 10000000], [-6855789, -7427096, 10000000], [-8053228, -8087595, 10000000]]
y = [175920000, 91302000, 136620000, 118539999, 68233000, 118859999, 43483000, 120000000, 65987000, 38166000, 32522000, 155050000, 31551000, 72258000, 7161800, 35129000, 53048000, 5607700, 36518000, 53893000, 31386000, 217670000, 42630000, 51875000, 30825000, 226380000, 135010000, 70467000, 146920000, 241469999, -12200000, 59966000, 121340000, 18495000, 65426000, 45622999, 41163999, 33928000, 101170000, 54974000, 5565700, 39115000, 53854000, 24406000, 67318000, 10463000, 51337000, 18440000, 80043000, 10179000, 67504000, 18396000, 42885000, 49981000, 14233000, -14211000, 24756000, 46041999, 39624000, 54141000, 51694000, -7427899, 179289999, 120540000, 170539999, 48852000, 57442000, 77754000, 10173000, 209920000, 66799000, 40259000, 12784000, 33411000, -26807000, 2967800, 38845000, 57013999, 67526000, 20576000, 4795300, 2042100, 6786100, 75435000, 53436000, 42415000, 67981000, 9269500, 1520000, 28214000]
for i in range(0, 90):
    if y[i] >= 0:
        y[i] = str(y[i])
    else:
        y[i] = str(hex(y[i] & 0xffffffffffffffff))
    for j in range(0, 3):
        if x[i][j] >= 0:
            x[i][j] = str(x[i][j])
        else:
            x[i][j] = str(hex(x[i][j] & 0xffffffffffffffff))

in_path = "/proof.json"
out_path = "/zok-in.json"
next_epoch = 0
if len(sys.argv) > 1:
    epoch = int(sys.argv[1])
    in_path = "e" + str(epoch-1) + "/" + in_path
    out_path = "e" + str(epoch) + "/" + out_path

if epoch == 0:
    next = ["0", "0", "0"]
else:
    proof = open(in_path, "r")
    jproof = json.load(proof)
    proof.close()
    next = jproof['inputs'][3:]

f = open(out_path, "w")
stru = [x, y, next]
json.dump(stru, f, indent=4)
